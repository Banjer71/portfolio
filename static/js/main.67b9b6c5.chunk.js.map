{"version":3,"sources":["components/navbar/Navbar.js","components/cards/Card.js","components/main/Main.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Card","props","href","link","target","rel","name","text","text2","Main","cards_Card","Footer","App","navbar_Navbar","main_Main","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mNAmBeA,MAhBf,WACI,OACKC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,0BCODC,MAbf,SAAcC,GACV,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,EAAMF,YACtBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGI,KAAMD,EAAME,KAAMC,OAAO,SAASC,IAAI,uBAAwBJ,EAAMK,OAE3EV,EAAAC,EAAAC,cAAA,SAAIG,EAAMM,MACVX,EAAAC,EAAAC,cAAA,SAAIG,EAAMO,SC4CPC,MAnDf,WAGI,OACIb,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iDACJF,EAAAC,EAAAC,cAAA,+VACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,gCAAgCE,OAAO,QAAOR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACvEH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,8BAA8BE,OAAO,QAAOR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BACrEH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,yDAAyDE,OAAO,QAAOR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAIxGH,EAAAC,EAAAC,cAACY,EAAD,CAAMX,UAAU,cACZI,KAAK,2CACLG,KAAK,eACLC,KAAK,wIACLC,MAAM,kLAGVZ,EAAAC,EAAAC,cAACY,EAAD,CAAMX,UAAU,cACZI,KAAK,mCACLG,KAAK,uBACLC,KAAK,2NACLC,MAAM,6IAGVZ,EAAAC,EAAAC,cAACY,EAAD,CAAMX,UAAU,cACZI,KAAK,mCACLG,KAAK,mBACLC,KAAM,CAAC,qFAAsFX,EAAAC,EAAAC,cAAA,KAAGI,KAAK,4BAA4BE,OAAO,SAASC,IAAI,uBAAxD,0DAC7FG,MAAM,sVAEVZ,EAAAC,EAAAC,cAACY,EAAD,CAAMX,UAAU,eACZI,KAAK,wCACLG,KAAK,0BACLC,KAAK,4NACLC,MAAM,0JC7BXG,MAff,WACI,OACIf,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,iDCWLa,MAVf,WACE,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACe,EAAD,MACEjB,EAAAC,EAAAC,cAACgB,EAAD,MACHlB,EAAAC,EAAAC,cAACiB,EAAD,QCDeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.67b9b6c5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n         <header className=\"App-header\">\r\n             <div className=\"container\">\r\n                <h1>Davide Naccarati</h1>\r\n                <p className='sub-title'>Front-end Developer</p>\r\n             </div>\r\n                \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={props.className}></div>\r\n            <h3>\r\n                <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\" >{props.name}</a>\r\n            </h3>\r\n            <p>{props.text}</p>\r\n            <p>{props.text2}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from '../cards/Card'\r\n\r\nfunction Main() {\r\n    // const text  = 'appassionate indipendent scholar of Naval Archeology';\r\n    //  const link = text.link(\"http://benitoantonelli.it\");\r\n    return (\r\n        <main>\r\n            <div className=\"projects\">\r\n                <div className=\"dv\">\r\n                    <div className=\"david\">\r\n                        <h1>Davide's Lab</h1>\r\n                    </div>\r\n                    <h3><em>Projects, Case Study and Practice </em></h3>\r\n                    <p>For those who were looking for a real portfolio, I am sorry to dissappoint you but you won't find anything like that. I still consider myself as an aspiring front end developer and despite the projects showed here are real projects I like to consider them as open products where I can practice and apply my studies in the web development.</p>\r\n                    <ul className=\"media\">\r\n                        <li><a href=\"https://twitter.com/Banjerkid\" target=\"_alt\"><i className=\"fab fa-twitter-square\"></i></a></li>\r\n                        <li><a href=\"https://github.com/Banjer71\" target=\"_alt\"><i className=\"fab fa-github-square\"></i></a></li>\r\n                        <li><a href=\"https://www.linkedin.com/in/davide-naccarati-877b9821/\" target=\"_alt\"><i className=\"fab fa-linkedin\"></i></a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <Card className='image-bg sv'\r\n                    link=\"https://banjer71.github.io/sergio_vacca/\"\r\n                    name='Sergio Vacca'\r\n                    text='This is the second projects I built in March 2018. I was still working full time as IT Technician and I made it in a week after work.'\r\n                    text2='It was fun to play with the CSS clip-path rules and Flexbox. It is a very simple website and not being a designer I tried to grab some ideas from the blue note cover albums.' />\r\n\r\n\r\n                <Card className='image-bg fl'\r\n                    link='https://banjer71.github.io/fra5/'\r\n                    name='Francesco Lomagistro'\r\n                    text=' I built at the end of 2017. It is still on github page waiting for the customer contents. It is made only with HTML/CSS. I built it starting from a mobile first approach but I am not sure it is the right way for me.'\r\n                    text2='I played with CSS shape rules, hamburger menu button made only with CSS and I tried to use for the first time CSS variables. It was fun!' />\r\n\r\n\r\n                <Card className='image-bg ba'\r\n                    link='https://banjer71.github.io/anto/'\r\n                    name='Benito Antonelli'\r\n                    text={['For this projects, I wanted to restyle an old website I made with Wordpress for an', <a href=\"http://benitoantonelli.it\" target=\"_blank\" rel=\"noopener noreferrer\">'appassionate indipendent scholar of Naval Archeology</a>]}\r\n                    text2='I used for the first time Bootstrap since I wanted to learn his basic functionality, such as its his grids system, his carousel and so on. Unfortunatelly this projects is still only on my GitHub page waiting for my customer pictures. Anyway I liked to use Bootstrap even if CSS-grids and Flexbox are changing the way to layout a website.' />\r\n\r\n                <Card className='image-bg bjc'\r\n                    link='http://www.berardijazzconnection.com/'\r\n                    name='Berardi Jazz Connection'\r\n                    text='This project was the first time I played with Wordpress template. It gave me the opportunity to learn and understand how the PHP works, and I started putting the hands on it without compromising too much the template.'\r\n                    text2='Anyway 4 or more years have passed and this website will be one of my next restyling projects where I am going to use only HTML/CSS and JavaScript' />\r\n\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"foot\">\r\n                <div className=\"copy\">\r\n                    <p className=\"footer-text\">Â©2017-2018 - Davide&nbsp;Naccarati</p>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Footer","import React from 'react';\nimport Navbar from './components/navbar/Navbar'\nimport Main from './components/main/Main'\nimport Footer from './components/footer/Footer'\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n        <Main />\n     <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}